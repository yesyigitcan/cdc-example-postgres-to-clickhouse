services:
  clickhouse:
    image: clickhouse
    container_name: app-clickhouse
    environment:
      - CLICKHOUSE_DB=clkdb
      - CLICKHOUSE_USER=xxxx
      - CLICKHOUSE_PASSWORD=xxxx
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    ports:
      - 8123:8123
      - 9000:9000
    networks:
      - network-app
    volumes:
      - volume-clickhouse-data:/var/lib/clickhouse/
      - volume-clickhouse-log:/var/log/clickhouse-server/

  spark-master:
    image: docker.io/bitnami/spark:3.5
    container_name: app-spark-master
    user: root
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - 8082:8080
      - 4040:4040
    networks:
      - network-app
    volumes:
      - volume-spark-master-data:/opt/spark/data
      - volume-spark-master-etl:/etl/

  spark-worker:
    image: docker.io/bitnami/spark:3.5
    container_name: app-spark-worker
    user: root
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - 7077:7077
      - 8081:8081
    networks:
      - network-app
    volumes:
      - volume-spark-worker-data:/opt/spark/data

  postgres:
    image: postgres:13
    container_name: app-postgres
    environment:
      - POSTGRES_USER=debezium
      - POSTGRES_PASSWORD=debezium
      - POSTGRES_DB=debezium
    ports:
      - 5432:5432
    networks:
      - network-app
    volumes:
      - volume-postgres-data:/var/lib/postgresql/data
    command: [ "postgres", "-c", "wal_level=logical" ]

  kafka-broker:
    image: bitnami/kafka:latest
    container_name: app-kafka
    ports:
      - 9094:9094
    networks:
      - network-app
    volumes:
      - volume-kafka-data:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-broker:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

  debezium-connect:
    image: debezium/connect:2.4.0.Final
    container_name: app-debezium-connect
    ports:
      - 8083:8083
      - 8778:8778
    links:
      - kafka-broker
    networks:
      - network-app
    environment:
      - BOOTSTRAP_SERVERS=kafka-broker:9092
      - GROUP_ID=debezium-events
      - CONFIG_STORAGE_TOPIC=debezium_configs
      - OFFSET_STORAGE_TOPIC=debezium_offsets
      - STATUS_STORAGE_TOPIC=debezium_statuses
    volumes:
      - volume-debezium-connect-kafka-config:/kafka/config
      - volume-debezium-connect-kafka-logs:/kafka/logs

  debezium-ui:
    image: debezium/debezium-ui:2.4
    container_name: app-debezium-ui
    platform: linux/amd64
    environment:
      - KAFKA_CONNECT_URIS=http://debezium-connect:8083
    networks:
      - network-app
    ports:
      - 9091:8080
    depends_on:
      - debezium-connect


networks:
  network-app:
    driver: bridge

volumes:
  volume-clickhouse-data:
    driver: local
  volume-clickhouse-log:
    driver: local
  volume-spark-master-data:
    driver: local
  volume-spark-master-etl:
    driver: local
  volume-spark-worker-data:
    driver: local
  volume-postgres-data:
    driver: local
  volume-kafka-data:
    driver: local
  volume-debezium-connect-kafka-config:
    driver: local
  volume-debezium-connect-kafka-logs:
    driver: local
